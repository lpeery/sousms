<?php
/******************************************************************
* Credentials.class.php
* By: Jeff Miller (millerj3@students.sou.edu), 2012-10-24
* Description: Validate a user
******************************************************************/

//this class is not the same as the Credentials class used by the client
//tbe client only needs the public properties for serialization purposes
class Credentials {
	//these should probably be private because you want your setter/constructor to validate
	public $username, $password;
	
	public function __construct($un, $pwd) {
		$this->username = $un;
		$this->password = $pwd;
	}
	
	/*//notice the & before the $, this makes it a reference variable
	public function validate(&$token) {
		$isValid = false;
		//simulate calling stored procedure...
		//the token would be generated by the stored procedure or
		//it would be passed in and saved
		if ($this->username == "test" && $this->password == "qwert") {
			$isValid = true;
			//generate a hash of random characters
			//that will be given to the client
			$token = md5($this->rand_string(100));
		}
		return $isValid;
	}
	*/
        public function validate(&$token, $duration) {
        $isValid = false;
            // check username for legal chars -- security team will do this
            // check password for legal chars -- security team will do this
            // if either is illegal
            $isValid = false;
            // else
                $result = mysql_query("CALL doesEmailExist(email)")or die('Could not find member: ' . mysql_error());
                // select uid, password where this->username matches email
            // if none
                $isValid = false;
            // elseif decrypted(password) != $this->password
                $isValid = false;
            // else
                $token = md5($this->rand_string(100));
                // insert login uid, $token, now(), now+$duration
                $isValid = true;

            return $isValid;
    }

	private function rand_string($length) {
		$str = "";
		$chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
		$size = strlen($chars);
		for($i = 0; $i < $length; $i++) {
			$str .= $chars[rand(0, $size - 1)];
		}
		return $str;
	}
};
?>
